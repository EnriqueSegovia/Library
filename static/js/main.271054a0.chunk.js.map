{"version":3,"sources":["components/SectionForm.jsx","components/SectionList.jsx","components/Sections.jsx","reducers/Sections.js","reducers/Books.js","components/BookForm.jsx","components/BookList.jsx","components/Books.jsx","App.js","reportWebVitals.js","index.js"],"names":["reduxForm","validate","values","errors","name","form","handleSubmit","className","onSubmit","Field","component","placeholder","type","SectionList","selectSection","sections","map","x","id","onClick","e","preventDefault","Sections","addSection","ADD_SECTION","SELECT_SECTION","initialState","data","selected","reducer","state","action","payload","selectedStyle","backgroundColor","color","borderColor","ADD_BOOKS","author","title","BookList","books","class","Books","addBooks","selectedSection","sectionId","connect","filter","dispatch","Math","random","toString","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","reducers","formReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.271054a0.chunk.js","sourcesContent":["import { reduxForm, Field } from 'redux-form'\r\n\r\nfunction SectionForm ({ handleSubmit }) {\r\n    return(\r\n        <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\r\n            <Field className=\"form-control\" name=\"name\" component=\"input\" placeholder=\"Section Name\" />\r\n            <button className=\"btn btn-secondary\" type=\"submit\">Add Section</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n  \r\n    if (!values.name) errors.name = 'You should add a Section'\r\n\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'section',\r\n})(SectionForm)","export default function SectionList ({ selectSection, sections }) {\r\n\r\n    const handleClick = id => (e) => {\r\n        e.preventDefault()\r\n        selectSection(id)\r\n    }\r\n\r\n    return(\r\n        <ul className=\"list-group mr-auto\">\r\n            {sections.map(x => \r\n                <li \r\n                    id=\"success-outlined\" \r\n                    className=\"list-group-item btn btn-dark\" \r\n                    onClick={handleClick(x.id)} \r\n                    key={x.id}\r\n                    >\r\n                        {x.name}\r\n                </li>)}\r\n        </ul>\r\n    )\r\n}","import SectionForm from './SectionForm'\r\nimport SectionList from './SectionList'\r\n\r\nexport default function Sections ({  sections, addSection, selectSection }) {\r\n    return (\r\n        <>\r\n            <SectionForm onSubmit={addSection}/>\r\n            <SectionList selectSection={selectSection} sections={sections} />\r\n        </>\r\n    )\r\n}","const ADD_SECTION = 'section/add'\r\nconst SELECT_SECTION = 'section/select'\r\n\r\n/*\r\nid\r\nname\r\n*/\r\n\r\nexport const addSection = payload => ({\r\n    type: ADD_SECTION,\r\n    payload: {\r\n        ...payload,\r\n        id: Math.random().toString(36),\r\n    }\r\n})\r\n\r\nexport const selectSection = payload => ({\r\n    type: SELECT_SECTION,\r\n    payload,\r\n})\r\n\r\nconst initialState = {\r\n    data: [{ id: 1, name: 'Default'}],\r\n    selected: 1,\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_SECTION:\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload]\r\n            }\r\n        case SELECT_SECTION: \r\n            return {\r\n                ...state,\r\n                selected: action.payload,\r\n                selectedStyle: [{backgroundColor: \"#3f454e\", color: \"#fff\", borderColor: \"#1a1e21\"}]\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","const ADD_BOOKS = 'books/add'\r\n\r\n/*\r\nid\r\nname\r\nsection_id\r\n*/\r\n\r\nexport const addBooks = payload => ({\r\n    type: ADD_BOOKS,\r\n    payload: {\r\n        ...payload,\r\n        id: Math.random().toString(36),\r\n    }\r\n})\r\n\r\nconst initialState = {\r\n    data: []\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_BOOKS:\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { reduxForm, Field } from 'redux-form'\r\n\r\nfunction BookForm ({ handleSubmit }) {\r\n    return(\r\n        <form className=\"input-group mb-3\" onSubmit={handleSubmit} >\r\n            <Field className=\"form-control\" name=\"author\" component=\"input\" placeholder=\"Book Author\" />\r\n            <Field className=\"form-control\" name=\"title\" component=\"input\" placeholder=\"Book Title\" />\r\n            <button className=\"btn btn-secondary\" type=\"submit\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n  \r\n    if (!values.author) errors.author = 'You should add a Author'\r\n\r\n    if (!values.title) errors.title = 'You should add a Title'\r\n \r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'book',\r\n})(BookForm)","export default function BookList ({ books }) {\r\n    return(\r\n        books.map(x => \r\n            <div key={x.id} class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{x.title}</h5>\r\n                    <p class=\"card-text\">{x.author}</p>  \r\n                </div>\r\n            </div>\r\n        )\r\n    )\r\n}","import BookForm from './BookForm'\r\nimport BookList from './BookList'\r\n\r\nexport default function Books ({ addBooks, selectedSection, books }) {\r\n\r\n    const handleSubmit = (payload) => {\r\n        addBooks({...payload, sectionId: selectedSection})\r\n    }\r\n        return (\r\n            <>\r\n                <BookForm onSubmit={handleSubmit}/>\r\n                <BookList books={books} />\r\n            </>\r\n        )\r\n    }\r\n","import { connect } from 'react-redux'\nimport { reset } from 'redux-form'\n\n//Components\nimport Sections from './components/Sections';\nimport { addSection, selectSection } from './reducers/Sections'\nimport { addBooks } from './reducers/Books'\nimport Books from './components/Books';\n\nfunction App ({ \n  sections, \n  addSection, \n  books, \n  addBooks, \n  selectSection, \n  selected,}) {\n\n    return (\n        <div className=\"container\">\n          <h1>Library</h1>\n          <Sections \n            selectSection={selectSection} \n            addSection={addSection} \n            sections={sections}\n            />\n          <hr />\n          <Books addBooks={addBooks} selectedSection={selected} books={books}/>\n        </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { Sections: { data: sections, selected }} = state\n  const { Books: { data: books }} = state\n\n  return {\n    sections,\n    books: books.filter(x => x.sectionId === selected),\n    selected,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addSection: payload => {\n    dispatch(addSection(payload))\n    dispatch(reset('section'))\n  },\n  selectSection: payload => dispatch(selectSection(payload)),\n  addBooks: payload => {\n    dispatch(addBooks(payload))\n    dispatch(reset('book'))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { reducer as formReducer } from 'redux-form'\nimport { createStore, combineReducers } from 'redux'\nimport * as reducers from './reducers'\nimport reportWebVitals from './reportWebVitals'\n\nconst store = createStore(combineReducers({\n  ...reducers,\n  form: formReducer,\n}))\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}